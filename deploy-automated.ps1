# Script para Deploy Automatizado - Sistema Confeitaria FullStack
# Autor: Sistema Confeitaria FullStack
# Data: $(Get-Date -Format "yyyy-MM-dd")

Write-Host "üöÄ Deploy Automatizado - Sistema Confeitaria FullStack" -ForegroundColor Green
Write-Host "=====================================================" -ForegroundColor Blue

# Verificar se Git est√° configurado
try {
    $gitUser = git config user.name
    $gitEmail = git config user.email
    Write-Host "‚úÖ Git configurado: $gitUser <$gitEmail>" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Git n√£o configurado. Configure antes de continuar:" -ForegroundColor Red
    Write-Host "   git config --global user.name 'Seu Nome'" -ForegroundColor Yellow
    Write-Host "   git config --global user.email 'seu@email.com'" -ForegroundColor Yellow
    exit 1
}

# Verificar se h√° mudan√ßas n√£o commitadas
$gitStatus = git status --porcelain
if ($gitStatus) {
    Write-Host "üìù Encontradas mudan√ßas n√£o commitadas:" -ForegroundColor Yellow
    Write-Host $gitStatus -ForegroundColor Gray
    
    $response = Read-Host "Deseja fazer commit das mudan√ßas? (s/n)"
    if ($response -eq 's' -or $response -eq 'S') {
        $commitMessage = Read-Host "Digite a mensagem do commit"
        if (-not $commitMessage) {
            $commitMessage = "Deploy autom√°tico - $(Get-Date -Format 'yyyy-MM-dd HH:mm')"
        }
        
        git add .
        git commit -m $commitMessage
        Write-Host "‚úÖ Commit realizado: $commitMessage" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Deploy cancelado. Fa√ßa commit das mudan√ßas primeiro." -ForegroundColor Red
        exit 1
    }
}

# Fazer push para o reposit√≥rio
Write-Host "üì§ Fazendo push para o reposit√≥rio..." -ForegroundColor Cyan
try {
    git push origin main
    Write-Host "‚úÖ Push realizado com sucesso" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erro ao fazer push. Verifique se o reposit√≥rio est√° configurado." -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "üéØ Pr√≥ximos Passos para Deploy:" -ForegroundColor Yellow
Write-Host "=================================" -ForegroundColor Blue

Write-Host ""
Write-Host "1Ô∏è‚É£  DEPLOY DO BACKEND (Railway):" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Acesse: https://railway.app" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Fa√ßa login com GitHub" -ForegroundColor Gray
Write-Host "   ‚Ä¢ New Project ‚Üí Deploy from GitHub repo" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Selecione seu reposit√≥rio" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Adicione PostgreSQL: New ‚Üí Database ‚Üí PostgreSQL" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Configure vari√°veis:" -ForegroundColor Gray
Write-Host "     JWT_SECRET=sua_chave_secreta_muito_segura_aqui" -ForegroundColor Gray
Write-Host "     FRONTEND_URL=https://seu-frontend.vercel.app" -ForegroundColor Gray

Write-Host ""
Write-Host "2Ô∏è‚É£  DEPLOY DO FRONTEND (Vercel):" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Acesse: https://vercel.com" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Fa√ßa login com GitHub" -ForegroundColor Gray
Write-Host "   ‚Ä¢ New Project ‚Üí Import Git Repository" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Configure:" -ForegroundColor Gray
Write-Host "     Framework Preset: Vite" -ForegroundColor Gray
Write-Host "     Root Directory: frontend" -ForegroundColor Gray
Write-Host "     Build Command: npm run build" -ForegroundColor Gray
Write-Host "     Output Directory: dist" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Configure vari√°vel:" -ForegroundColor Gray
Write-Host "     VITE_API_URL=https://seu-backend.railway.app" -ForegroundColor Gray

Write-Host ""
Write-Host "3Ô∏è‚É£  CONECTAR FRONTEND E BACKEND:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Copie a URL do backend do Railway" -ForegroundColor Gray
Write-Host "   ‚Ä¢ No Vercel: Settings ‚Üí Environment Variables" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Atualize VITE_API_URL com a URL do backend" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Fa√ßa novo deploy no Vercel" -ForegroundColor Gray

Write-Host ""
Write-Host "4Ô∏è‚É£  TESTAR A APLICA√á√ÉO:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Frontend: https://seu-frontend.vercel.app" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Backend: https://seu-backend.railway.app" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Credenciais: admin@confeitaria.com / 123456" -ForegroundColor Gray

Write-Host ""
Write-Host "üîß COMANDOS √öTEIS:" -ForegroundColor Yellow
Write-Host "==================" -ForegroundColor Blue

Write-Host ""
Write-Host "Verificar status do backend:" -ForegroundColor Gray
Write-Host "curl https://seu-backend.railway.app/actuator/health" -ForegroundColor White

Write-Host ""
Write-Host "Verificar status do frontend:" -ForegroundColor Gray
Write-Host "curl https://seu-frontend.vercel.app" -ForegroundColor White

Write-Host ""
Write-Host "Deploy manual backend:" -ForegroundColor Gray
Write-Host "cd backend; mvn clean package; railway up" -ForegroundColor White

Write-Host ""
Write-Host "Deploy manual frontend:" -ForegroundColor Gray
Write-Host "cd frontend; npm run build; vercel --prod" -ForegroundColor White

Write-Host ""
Write-Host "üìä MONITORAMENTO:" -ForegroundColor Yellow
Write-Host "=================" -ForegroundColor Blue
Write-Host "‚Ä¢ Railway: Logs e m√©tricas do backend" -ForegroundColor Gray
Write-Host "‚Ä¢ Vercel: Analytics e performance do frontend" -ForegroundColor Gray
Write-Host "‚Ä¢ PostgreSQL: Backup autom√°tico inclu√≠do" -ForegroundColor Gray

Write-Host ""
Write-Host "üîê SEGURAN√áA:" -ForegroundColor Yellow
Write-Host "=============" -ForegroundColor Blue
Write-Host "‚Ä¢ ‚úÖ HTTPS autom√°tico" -ForegroundColor Green
Write-Host "‚Ä¢ ‚úÖ Vari√°veis de ambiente seguras" -ForegroundColor Green
Write-Host "‚Ä¢ ‚úÖ CORS configurado" -ForegroundColor Green
Write-Host "‚Ä¢ ‚úÖ Backup autom√°tico do banco" -ForegroundColor Green

Write-Host ""
Write-Host "üéâ Deploy configurado! Siga os passos acima para colocar em produ√ß√£o." -ForegroundColor Green
Write-Host "=====================================================" -ForegroundColor Blue 